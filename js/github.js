!function () { "use strict"; const t = new Set(["user", "repo", "type", "count", "size", "text", "v"]); function e(t) { return String(t).replace(/(\d)(?=(\d{3})+$)/g, "$1,") } const a = function () { const e = window.location.href.slice(window.location.href.indexOf("?") + 1).split("&"), a = new Map; for (const s of e) { const [e, r] = s.split("="); t.has(e) && a.set(e, r) } return a }(), s = a.get("user"), r = a.get("repo"), o = a.get("type"), n = a.get("count"), c = a.get("size"), i = a.get("text"), l = a.get("v"), u = document.querySelector(".gh-btn"), d = document.querySelector(".github-btn"), b = document.querySelector(".gh-text"), $ = document.querySelector(".gh-count"), h = "on GitHub", f = "https://github.com/", g = "https://api.github.com/", x = `${f + s}/${r}`, w = `${s}/${r}`; let C; switch (window.callback = function (t) { if ("Not Found" !== t.data.message) { switch (o) { case "watch": "2" === l ? ($.textContent = t.data.subscribers_count && e(t.data.subscribers_count), $.setAttribute("aria-label", `${$.textContent} watchers ${h}`)) : ($.textContent = t.data.stargazers_count && e(t.data.stargazers_count), $.setAttribute("aria-label", `${$.textContent} stargazers ${h}`)); break; case "star": $.textContent = t.data.stargazers_count && e(t.data.stargazers_count), $.setAttribute("aria-label", `${$.textContent} stargazers ${h}`); break; case "fork": $.textContent = t.data.network_count && e(t.data.network_count), $.setAttribute("aria-label", `${$.textContent} forks ${h}`); break; case "follow": $.textContent = t.data.followers && e(t.data.followers), $.setAttribute("aria-label", `${$.textContent} followers ${h}`) }"true" === n && "" !== $.textContent && ($.style.display = "block", $.removeAttribute("aria-hidden")) } }, u.href = x, o) { case "watch": "2" === l ? (d.classList.add("github-watchers"), b.textContent = "Watch", $.href = `${x}/watchers`) : (d.classList.add("github-stargazers"), b.textContent = "Star", $.href = `${x}/stargazers`), C = `${b.textContent} ${w}`; break; case "star": d.classList.add("github-stargazers"), b.textContent = "Star", $.href = `${x}/stargazers`, C = `${b.textContent} ${w}`; break; case "fork": d.classList.add("github-forks"), b.textContent = "Fork", u.href = `${x}/fork`, $.href = `${x}/network`, C = `${b.textContent} ${w}`; break; case "follow": d.classList.add("github-me"), b.textContent = `Follow @${s}`, u.href = f + s, $.href = `${f + s}?tab=followers`, C = b.textContent; break; case "sponsor": d.classList.add("github-me"), b.textContent = `Sponsor @${s}`, u.href = `${f}sponsors/${s}`, C = b.textContent }"false" === i && (u.classList.add("no-text"), b.setAttribute("aria-hidden", !0), b.style.display = "none", b.textContent = ""), u.setAttribute("aria-label", `${C} ${h}`), document.title = `${C} ${h}`, "large" === c && d.classList.add("github-btn-large"), "true" === n && "sponsor" !== o && "false" !== i && function (t) { const e = document.createElement("script"); e.src = `${t}?callback=callback`, document.head.insertBefore(e, document.head.firstChild) }("follow" === o ? `${g}users/${s}` : `${g}repos/${s}/${r}`) }()